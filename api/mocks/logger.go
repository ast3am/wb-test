// Code generated by mockery v2.23.1. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// logger is an autogenerated mock type for the logger type
type logger struct {
	mock.Mock
}

// HandlerErrorLog provides a mock function with given fields: r, status, msg, err
func (_m *logger) HandlerErrorLog(r *http.Request, status int, msg string, err error) {
	_m.Called(r, status, msg, err)
}

// HandlerLog provides a mock function with given fields: r, status, msg
func (_m *logger) HandlerLog(r *http.Request, status int, msg string) {
	_m.Called(r, status, msg)
}

type mockConstructorTestingTnewLogger interface {
	mock.TestingT
	Cleanup(func())
}

// newLogger creates a new instance of logger. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewLogger(t mockConstructorTestingTnewLogger) *logger {
	mock := &logger{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
