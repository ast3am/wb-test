// Code generated by mockery v2.23.1. DO NOT EDIT.

package mocks

import (
	"context"
	"github.com/ast3am/wb-test/internal/models"
	"github.com/stretchr/testify/mock"
)

// db is an autogenerated mock type for the db type
type db struct {
	mock.Mock
}

// GetOrders provides a mock function with given fields: ctx
func (_m *db) GetOrders(ctx context.Context) ([]*models.Orders, error) {
	ret := _m.Called(ctx)

	var r0 []*models.Orders
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) ([]*models.Orders, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) []*models.Orders); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Orders)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// InsertOrders provides a mock function with given fields: ctx, orders
func (_m *db) InsertOrders(ctx context.Context, orders models.Orders) error {
	ret := _m.Called(ctx, orders)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, models.Orders) error); ok {
		r0 = rf(ctx, orders)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTnewDb interface {
	mock.TestingT
	Cleanup(func())
}

// newDb creates a new instance of db. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDb(t mockConstructorTestingTnewDb) *db {
	mock := &db{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
